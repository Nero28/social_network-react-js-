{"version":3,"sources":["components/Dialogs/Header/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Header/Dialogs.jsx","components/Dialogs/Header/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogItems","active","messages","header","DialogItem","props","path","id","react_default","a","createElement","className","s","dialog","photo","react_router_dom","to","src","foto","name","Message","message","maxLength100","maxLengthCreator","Dialogs","state","dialogsPage","dialogsElements","map","d","Dialogs_DialogItem_DialogItem","messagesElements","m","Dialogs_Message_Message","AddMessageReduxForm","newMessageBody","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","values","sendMessage","compose","connect","dispatch","sendMessageCreator","WithAuthRedirect"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,YAAA,6BAAAC,OAAA,wBAAAC,SAAA,0BAAAC,OAAA,yHCUHC,EAPI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEX,OAASW,IAAEE,OACzDN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASC,GAAIV,GAAb,IAAoBE,EAAAC,EAAAC,cAAA,OAAKO,IAAOZ,EAAMa,OAAtC,IAAgDb,EAAMc,QCGvCC,EALC,SAACf,GACb,OAAOG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAES,SAAUhB,EAAMgB,2CCGvCC,EAAeC,YAAiB,KAkDvBC,EAhDC,SAACnB,GAEb,IAAIoB,EAAQpB,EAAMqB,YAEZC,EAAkBF,EAAM1B,QAAQ6B,IAAI,SAACC,GAAD,OAAOrB,EAAAC,EAAAC,cAACoB,EAAD,CAAYX,KAAMU,EAAEV,KAAMZ,GAAIsB,EAAEtB,GAAIW,KAAMW,EAAEX,SAEvFa,EAAmBN,EAAMvB,SAAS0B,IAAI,SAACI,GAAD,OAAOxB,EAAAC,EAAAC,cAACuB,EAAD,CAASZ,QAASW,EAAEX,YAqBjEa,GAlBeT,EAAMU,eAkBCC,YAAU,CAAEC,KAAM,yBAAlBD,CAhBL,SAAC/B,GACpB,OACIG,EAAAC,EAAAC,cAAA,QAAM4B,SAAUjC,EAAMkC,cAClB/B,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAOC,YAAY,qBACpBtB,KAAK,iBACLuB,UAAWC,IACXC,SAAU,CAACC,IAAUvB,MACzBd,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,mCAYjB,OACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEb,SACdS,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,aACb2B,GAELnB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEV,UACb6B,GAELvB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAET,QACdK,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwB,EAAD,CAAqBI,SAlBf,SAACQ,GACnBzC,EAAM0C,YAAYD,EAAOX,8CCblBa,sBACXC,YAfoB,SAACxB,GACrB,MAAO,CACHC,YAAaD,EAAMC,cAIA,SAACwB,GACxB,MAAO,CACHH,YAAa,SAACZ,GACVe,EAASC,YAAmBhB,QAOpCiB,IAFWJ,CAIdxB","file":"static/js/3.43f8663e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__XIw_p\",\"dialogItems\":\"Dialogs_dialogItems__IhL4r\",\"active\":\"Dialogs_active__jh0z7\",\"messages\":\"Dialogs_messages__2rhV-\",\"header\":\"Dialogs_header__3pGZg\"};","import React from 'react';\nimport s from './../Header/Dialogs.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst DialogItem = (props) => {\n    let path = '/dialogs/' + props.id;\n    return <div className={s.dialog + ' ' + s.active + s.photo} >\n<NavLink to={path}> <img src = {props.foto} /> {props.name}</NavLink>\n    </div>\n}\n\nexport default DialogItem;","import React from 'react';\nimport s from './../Header/Dialogs.module.css';\n \n\n\nconst Message = (props) => {\n    return <div className={s.message}>{props.message}</div>\n}\n\n\nexport default Message;","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './../DialogItem/DialogItem.jsx';\nimport Message from './../Message/Message.jsx';\nimport { Field, reduxForm } from 'redux-form'\nimport { Textarea } from '../../common/FormsControls/FormsControls';\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\n\n\nconst maxLength100 = maxLengthCreator(100);\n\nconst Dialogs = (props) => {\n\n    let state = props.dialogsPage;\n\n    const dialogsElements = state.dialogs.map((d) => <DialogItem name={d.name} id={d.id} foto={d.foto} />);\n\n    const messagesElements = state.messages.map((m) => <Message message={m.message} />);\n\n\n    let newMessageBody = state.newMessageBody;\n\n    const AddMessageForm = (props) => {\n        return (\n            <form onSubmit={props.handleSubmit}>\n                <div><Field placeholder='Enter your message'\n                    name='newMessageBody'\n                    component={Textarea}\n                    validate={[required, maxLength100]} /></div>\n                <div><button >Send message</button></div>\n            </form>\n        )\n    };\n\n    const addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody);\n    };\n\n    const AddMessageReduxForm = reduxForm({ form: 'dialogsAddMessageForm' })(AddMessageForm);\n\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                {messagesElements}\n            </div>\n            <div className={s.header}>\n                <h3>Write message</h3>\n                <div>\n                    <AddMessageReduxForm onSubmit={addNewMessage} />\n                </div>\n            </div>\n        </div >\n    )\n}\n\nexport default Dialogs;","import React from 'react';\nimport { sendMessageCreator} from '../../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport WithAuthRedirect from '../../../hoc/WithAuthRedirect';\nimport { compose } from 'redux';\n\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody));\n        }\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps,mapDispatchToProps),\n    WithAuthRedirect  \n)\n(Dialogs);\n  "],"sourceRoot":""}